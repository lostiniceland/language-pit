plugins {
  id "scala"
  id "com.bmuschko.docker-remote-api" version "3.2.4"
  id 'com.github.johnrengelman.shadow' version '2.0.4'
  id 'com.charlesahunt.scalapb' version '1.2.0'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

ext {
  versionScala = '2.12.5'
  versionScalaTest = '3.0.5'
  versionScalaLogging = '3.5.0'
  versionAkka = '2.5.13'
  versionAkkaHttp = '10.1.2'
  versionLogback = '1.1.8'
  versionLevelDb = '0.10'
  versionProtobuf = '3.5.1'
  versionSpecs2 = '4.2.0'
}

version = '0.1.0'

repositories {
  mavenCentral()
}

sourceSets.main.scala.srcDirs += 'build/generated/source/proto/main/scala'

dependencies {
  compile group: 'org.scala-lang', name: 'scala-library', version: versionScala
  compile group: 'com.typesafe.akka', name: 'akka-http_2.12', version: versionAkkaHttp
  compile group: 'com.typesafe.akka', name: 'akka-stream_2.12', version: versionAkka
  compile group: 'com.typesafe.akka', name: 'akka-persistence_2.12', version: versionAkka
  compile group: 'org.fusesource.leveldbjni', name: 'leveldbjni-all', version: '1.8'
  compile group: 'com.google.protobuf', name: 'protobuf-java', version: versionProtobuf
  compile group: 'com.thesamet.scalapb', name: 'scalapb-runtime_2.12', version: '0.7.4'
  compile group: 'com.esotericsoftware', name: 'kryo', version: '4.0.2'
  compile group: 'com.github.romix.akka', name: 'akka-kryo-serialization_2.12', version: '0.5.2'
  testCompile group: 'junit', name: 'junit', version: '4.+'
  testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: versionScalaTest
  testCompile group: 'com.typesafe.akka', name: 'akka-testkit_2.12', version: versionAkka
  testCompile group: 'com.typesafe.akka', name: 'akka-http-testkit_2.12', version: versionAkkaHttp
  testCompile group: 'org.specs2', name: 'specs2-core_2.12', version: versionSpecs2
}


compileScala.dependsOn scalapb

scalapbConfig {
  grpc = false
  projectProtoSourceDir = '../protobuf/'
  targetDir = "/build/generated/source/proto/main/scala"
  protocVersion = "-v351"
}


jar {
  manifest {
    attributes 'Main-Class': 'orchestration.Orchestration'
  }
}

shadowJar{
  // see https://doc.akka.io/docs/akka/snapshot/general/configuration.html#When_using_JarJar__OneJar__Assembly_or_any_jar-bundler
  append 'reference.conf'
}

task createDockerfile(type: Dockerfile) {
  dependsOn shadowJar
  destFile = project.file("$shadowJar.destinationDir/Dockerfile")
  from 'openjdk:8-jre-alpine'
  copyFile (shadowJar.archiveName, '/')
  exposePort(9090)
  defaultCommand "java", "-jar", "$shadowJar.archiveName"
}

task buildImage(type: DockerBuildImage) {
  dependsOn createDockerfile
  inputDir = createDockerfile.destFile.parentFile
  tag = 'languagepit/orchestration:akka'
}
