// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package wife.infrastructure.protobuf

sealed trait ApprovalEnumType extends _root_.scalapb.GeneratedEnum {
  type EnumType = ApprovalEnumType

  def isPending: _root_.scala.Boolean = false

  def isAccepted: _root_.scala.Boolean = false

  def isRejected: _root_.scala.Boolean = false

  def companion: _root_.scalapb.GeneratedEnumCompanion[ApprovalEnumType] = wife.infrastructure.protobuf.ApprovalEnumType
}

object ApprovalEnumType extends _root_.scalapb.GeneratedEnumCompanion[ApprovalEnumType] {
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[ApprovalEnumType] = this

  @SerialVersionUID(0L)
  case object PENDING extends ApprovalEnumType {
    val value = 0
    val index = 0
    val name = "PENDING"

    override def isPending: _root_.scala.Boolean = true
  }

  @SerialVersionUID(0L)
  case object ACCEPTED extends ApprovalEnumType {
    val value = 1
    val index = 1
    val name = "ACCEPTED"

    override def isAccepted: _root_.scala.Boolean = true
  }

  @SerialVersionUID(0L)
  case object REJECTED extends ApprovalEnumType {
    val value = 2
    val index = 2
    val name = "REJECTED"

    override def isRejected: _root_.scala.Boolean = true
  }

  @SerialVersionUID(0L)
  final case class Unrecognized(value: _root_.scala.Int) extends ApprovalEnumType with _root_.scalapb.UnrecognizedEnum

  lazy val values = scala.collection.Seq(PENDING, ACCEPTED, REJECTED)

  def fromValue(value: _root_.scala.Int): ApprovalEnumType = value match {
    case 0 => PENDING
    case 1 => ACCEPTED
    case 2 => REJECTED
    case __other => Unrecognized(__other)
  }

  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = WifeProto.javaDescriptor.getEnumTypes.get(0)

  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = WifeProto.scalaDescriptor.enums(0)
}