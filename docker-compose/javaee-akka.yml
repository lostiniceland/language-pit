version: '3.4'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  kafka:
      image: wurstmeister/kafka
      ports:
        - target: 9094
          published: 9094
          protocol: tcp
          mode: host
      environment:
        HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
        # Use the following instead on "Docker for Windows" or "Docker Toolbox" and change IP accordingly
        # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://10.0.75.1:9094
        KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
        KAFKA_CREATE_TOPICS: "${TOPIC_NAME:-language-pit.events}:1:1"
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock

  orchestration:
    image: languagepit/orchestration:akka
    depends_on:
      - kafka
    ports:
      - 9090:9090
    environment:
      BIKE_HOST: bike
      BIKE_PORT: 8080
      WIFE_HOST: wife
      WIFE_PORT: 8080
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "/dev/null", "http://orchestration:9090/events/health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 3s

  bike:
    image: languagepit/javaee-bikes:openliberty
    depends_on:
      - orchestration
    ports:
      - 8080:8080
    environment:
      KAFKA_HOST: "kafka"
      KAFKA_PORT: 9092
      KAFKA_EVENT_TOPIC: ${TOPIC_NAME:-language-pit.events}
      DERBY_DB_LOCATION: "/opt/bikes-db"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "/dev/null", "http://bike:8080/bikes/health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 3s

  wife:
    image: languagepit/javaee-wife:openliberty
    depends_on:
      - orchestration
    ports:
      - 8090:8080
    environment:
      KAFKA_HOST: "kafka"
      KAFKA_PORT: 9092
      KAFKA_EVENT_TOPIC: ${TOPIC_NAME:-language-pit.events}
      DERBY_DB_LOCATION: "/opt/wife.db"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "/dev/null", "http://wife:8080/wife/health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 3s

