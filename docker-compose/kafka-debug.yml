version: '3.2'
services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:1.1.0
    container_name: kafka
    hostname: kafka
    ports:
      # use dynamic ports - "9092" when scaling to multiple nodes
      - 9092:9092
    environment:
      # explicitly set hostname when scaling to multiple nodes
      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_CREATE_TOPICS: "language-pit.events:1:1"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock

  schema-registry:
      image: confluentinc/cp-schema-registry:4.1.1
      hostname: schema-registry
      container_name: schema-registry
      depends_on:
        - zookeeper
        - kafka
      ports:
        - 8081:8081
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  kafka-rest:
    image: confluentinc/cp-kafka-rest:4.1.1
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka:9092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

  kafka-topics-ui:
    image: landoop/kafka-topics-ui
    depends_on:
      - kafka-rest
    ports:
      - 8000:8000
    hostname: topics-ui
    container_name: topics-ui
    environment:
      KAFKA_REST_PROXY_URL: "http://rest-proxy:8082"
      PROXY: "true"